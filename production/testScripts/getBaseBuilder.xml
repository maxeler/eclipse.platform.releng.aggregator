<?xml version="1.0" encoding="UTF-8"?>
    <!--
        A utility ant script get the base builder from CVS.
        Hudson jobs can call this script from ant
        as one of it first build steps.
    -->
<project
  name="getBaseBuilder"
  default="getBaseBuilder"
  basedir=".">

  <target
    name="init"
    depends="initWorkspace"
    unless="getBaseBuilderInitialized">

    <property environment="env" />

    <!--
         TODO: eventually should be previousReleaseVersion
         which requires "initStreamVariables"
     -->
    <property
      name="baseBuilderVersion"
      value="R38M6PlusRC3G" />
    <!-- eventually we will not have a hard coded version -->
    <fail
      unless="baseBuilderVersion"
      message="This script needs baseBuilderVersion to run" />


<!--
    The desired folder name (made to stay consistent
    old versions ... may want to make more meaningful,
    eventually.
-->
    <property
      name="basebuilderFolderName"
      value="org.eclipse.releng.basebuilder" />

    <!-- if not set directly by caller, see if it is an
         environment variable. If set, is it expected to be
         the patch to use to find the local, pre-cached version.
    -->
    <condition
      property="basebuilderlocal"
      value="${env.BASEBUILDER_LOCAL}">
      <isset property="env.BASEBUILDER_LOCAL" />
    </condition>

    <!-- just for better log messages -->
    <condition
      property="fetchSource"
      value="Fetching from git via CGit, since not local"
      else="Using local pre-cached version in ${basebuilderlocal}">
      <not>
        <isset property="basebuilderlocal" />
      </not>
    </condition>

    <echo message="=== Properties in init, of getBaseBuilder.xml" />
    <echo message="    WORKSPACE: ${WORKSPACE}" />
    <echo message="    basebuilder version: ${baseBuilderVersion}" />
    <echo message="    copied to folder: ${basebuilderFolderName}" />
    <echo message="    fetchSource: ${fetchSource}" />
    <echo message="    skipBaseBuilder ${skipBaseBuilder}" />

       <!-- not used? But, may want in future?
        <condition
            property="buildcleanarg"
            value="-Dbuild.clean=${build.clean}"
            else="">
            <isset property="build.clean" />
        </condition>

        <condition
            property="buildercleanarg"
            value="-Dcheckout.builder.clean=${checkout.builder.clean}"
            else="">
            <isset property="checkout.builder.clean" />
        </condition>
       -->
    <property
      name="getBaseBuilderInitialized"
      value="true" />
  </target>


  <target
    name="getBaseBuilder"
    depends="init, fetchBaseBuilder"
    unless="skipBaseBuilder">

    <fail
      unless="basebuilderfetched"
      message="Failed to get base builder" />
  </target>

  <target
    name="checkIfNeeded"
    depends="init">
    <!--
    At this point, specific to the "fall back" of getting from
    git, there are two reasons it may no longer be needed. Either the
    first task, the local fetch, got it, or else the user
    specified skipBaseBuilder, presumably because they already have it,
    and they do not need a clean copy.
    -->
    <condition property="notNeeded">
      <or>
        <istrue value="${skipBaseBuilder}" />
        <istrue value="${basebuilderfetched}" />
      </or>
    </condition>

  </target>

  <!-- getting from Git is always the fall back -->
  <target
    name="fetchBaseBuilderFromGit"
    depends="init, checkIfNeeded"
    unless="notNeeded">
    <echo message="Fetching basebuilder from Git via CGit" />

    <!--
         remove old one, if there, and make sure one exists
         for eventual checkout/copy/globmapper.
         Eventually will want to change this, so if already exists,
         then assume we are done?
    -->
    <delete dir="${WORKSPACE}/${basebuilderFolderName}" />
    <mkdir dir="${WORKSPACE}/${basebuilderFolderName}" />
    <get
      src="http://git.eclipse.org/c/platform/eclipse.platform.releng.basebuilder.git/snapshot/eclipse.platform.releng.basebuilder-${baseBuilderVersion}.zip"
      dest="${WORKSPACE}/basebuilder-${baseBuilderVersion}.zip" />
    <unzip
      src="${WORKSPACE}/basebuilder-${baseBuilderVersion}.zip"
      dest="${WORKSPACE}"
      overwrite="true" />

    <move todir="${WORKSPACE}/${basebuilderFolderName}">
      <fileset dir="${WORKSPACE}/eclipse.platform.releng.basebuilder-${baseBuilderVersion}">
        <include name="**/*" />
      </fileset>
    </move>

    <chmod perm="ugo+x">
      <fileset dir="${WORKSPACE}/${basebuilderFolderName}">
        <include name="eclipse" />
        <include name="*.so*" />
      </fileset>
    </chmod>

        <!-- we've moved the files, now to remove the empty dir -->
    <delete
      includeemptydirs="true">
      <dirset dir="${WORKSPACE}">
        <include name="eclipse.platform.releng.basebuilder-${baseBuilderVersion}" />
      </dirset>
    </delete>
        <!-- cleanup (may eventually want to "cache" this zip file, so no need to re-fetch if already exists -->

    <delete file="${WORKSPACE}/basebuilder-${baseBuilderVersion}.zip" />
    <property
      name="basebuilderfetched"
      value="true" />
  </target>


  <target
    name="fetchBaseBuilder"
    depends="init, fetchBaseBuilderLocal, fetchBaseBuilderFromGit"
    unless="skipBaseBuilder">
    <echo message="Fetched basebuilder to ${WORKSPACE}/${basebuilderFolderName}" />
  </target>
  <target
    name="fetchBaseBuilderLocal"
    depends="init"
    if="basebuilderlocal"
    unless="skipBaseBuilder">

    <!--
         remove old one, if there, and make sure one exists
         for eventual checkout/copy/globmapper.
         Eventually will want to change this, so if already exists,
         then assume we are done?
    -->
    <delete dir="${WORKSPACE}/${basebuilderFolderName}" />
    <mkdir dir="${WORKSPACE}/${basebuilderFolderName}" />

    <unzip
      src="${basebuilderlocal}/basebuilder-${baseBuilderVersion}.zip"
      dest="${WORKSPACE}"
      overwrite="true" />

    <move todir="${WORKSPACE}/${basebuilderFolderName}">
      <fileset dir="${WORKSPACE}/eclipse.platform.releng.basebuilder-${baseBuilderVersion}">
        <include name="**/*" />
      </fileset>
    </move>

    <chmod perm="ugo+x">
      <fileset dir="${WORKSPACE}/${basebuilderFolderName}">
        <include name="eclipse" />
        <include name="*.so*" />
      </fileset>
    </chmod>
    <echo message="Copied basebuilder to ${WORKSPACE}/${basebuilderFolderName}" />
    <property
      name="basebuilderfetched"
      value="true" />

  </target>
  <target
    name="initWorkspace"
    unless="WORKSPACE">
    <property environment="env" />
    <condition
      property="WORKSPACE"
      value="${env.WORKSPACE}"
      else="${basedir}">
      <isset property="env.WORKSPACE" />
    </condition>
  </target>
</project>